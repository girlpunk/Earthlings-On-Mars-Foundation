# Generated by Django 5.2.2 on 2025-06-09 19:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Recruit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                (
                    "extension",
                    models.PositiveSmallIntegerField(
                        help_text="What number do calls originate from (A-Number) when placed from this location",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["extension"],
                        name="calls_locat_extensi_75120d_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Mission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                (
                    "give_text",
                    models.TextField(
                        help_text="This text is given to the player when they initially begin the mission",
                    ),
                ),
                (
                    "reminder_text",
                    models.TextField(
                        help_text="This text is given to the player when the call back about the mission, without meeting the completion criteria",
                    ),
                ),
                (
                    "completion_text",
                    models.TextField(
                        help_text="This text is given to the player when they successfully complete the mission",
                    ),
                ),
                (
                    "type",
                    models.IntegerField(
                        choices=[
                            (1, "LOCATION"),
                            (2, "NPC"),
                            (3, "CODE"),
                            (5, "COUNT"),
                        ],
                    ),
                ),
                (
                    "points",
                    models.IntegerField(
                        help_text="How many points will be given to the user upon completion",
                    ),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        default=5,
                        help_text="If multiple missions are available, ones with higher priorities are preferred",
                    ),
                ),
                ("repeatable", models.BooleanField()),
                (
                    "not_before",
                    models.DateTimeField(
                        help_text="Only start this mission if the current date/time is after the specified date/time",
                        null=True,
                    ),
                ),
                (
                    "not_after",
                    models.DateTimeField(
                        help_text="Only start this mission if the current date/time is before the specified date/time",
                        null=True,
                    ),
                ),
                (
                    "cancel_after_time",
                    models.DateTimeField(
                        help_text="Cancel the mission if it is outstanding after the specified date/time",
                        null=True,
                    ),
                ),
                (
                    "cancel_after_tries",
                    models.PositiveSmallIntegerField(
                        help_text="Cancel the mission if the player calls its NPC without completing it this many times",
                        null=True,
                    ),
                ),
                (
                    "cancel_text",
                    models.TextField(
                        help_text="This text is given to the player when the mission is cancelled",
                        max_length=2000,
                    ),
                ),
                ("code", models.PositiveIntegerField(null=True)),
                (
                    "call_back_from",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="calls.location",
                    ),
                ),
                (
                    "followup_mission",
                    models.ForeignKey(
                        help_text="Which mission will automatically be started upon completion of this mission",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="calls.mission",
                    ),
                ),
                (
                    "only_start_from",
                    models.ForeignKey(
                        help_text="If set, this mission can only be started from the specified location",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="only_start_from",
                        to="calls.location",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MissionPrerequisites",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="calls.mission",
                    ),
                ),
                (
                    "prerequisite",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="prerequisite",
                        to="calls.mission",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="mission",
            name="prerequisites",
            field=models.ManyToManyField(
                related_name="prerequisites",
                through="calls.MissionPrerequisites",
                through_fields=("mission", "prerequisite"),
                to="calls.mission",
            ),
        ),
        migrations.CreateModel(
            name="NPC",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                (
                    "extension",
                    models.PositiveSmallIntegerField(
                        help_text="What number is dialled (B-Number) to reach this NPC",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["extension"],
                        name="calls_npc_extensi_481314_idx",
                    ),
                ],
            },
        ),
        migrations.AddField(
            model_name="mission",
            name="call_another",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="call_another",
                to="calls.npc",
            ),
        ),
        migrations.AddField(
            model_name="mission",
            name="issued_by",
            field=models.ForeignKey(
                help_text="Which NPC can start the mission",
                on_delete=django.db.models.deletion.PROTECT,
                to="calls.npc",
            ),
        ),
        migrations.CreateModel(
            name="CallLog",
            fields=[
                (
                    "call_id",
                    models.CharField(
                        max_length=64,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                ("duration", models.PositiveIntegerField()),
                ("digits", models.PositiveIntegerField()),
                (
                    "npc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="calls.npc",
                    ),
                ),
                (
                    "recruit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="calls.recruit",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RecruitMission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("started", models.DateTimeField()),
                ("finished", models.DateTimeField(null=True)),
                ("completed", models.BooleanField(default=False)),
                ("code_tries", models.PositiveSmallIntegerField(null=True)),
                ("count_value", models.PositiveIntegerField(null=True)),
                (
                    "mission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="calls.mission",
                    ),
                ),
                (
                    "recruit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="calls.recruit",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="mission",
            name="instances",
            field=models.ManyToManyField(
                through="calls.RecruitMission",
                to="calls.recruit",
            ),
        ),
        migrations.AddIndex(
            model_name="missionprerequisites",
            index=models.Index(
                fields=["mission"],
                name="calls_missi_mission_a85c26_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="recruitmission",
            index=models.Index(
                fields=["recruit", "completed"],
                name="calls_recru_recruit_d43952_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="mission",
            constraint=models.CheckConstraint(
                condition=models.Q(("priority__gte", 1), ("priority__lte", 10)),
                name="priority",
            ),
        ),
    ]
